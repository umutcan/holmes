<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-19
 * Time: 08:26 PM
 * Auto-generated by "generate.filters.php"
 * @package Holmes\components\filters
 */
namespace Holmes\components\filters;

use Holmes\components;

/**
 * @method \Holmes\components\filters\Range field() field(\string $value)
 * @method \Holmes\components\filters\Range from() from(mixed $value)
 * @method \Holmes\components\filters\Range to() to(mixed $value)
 * @method \Holmes\components\filters\Range lte() lte(mixed $value)
 * @method \Holmes\components\filters\Range gte() gte(mixed $value)
 * @method \Holmes\components\filters\Range lt() lt(mixed $value)
 * @method \Holmes\components\filters\Range gt() gt(mixed $value)
 * @method \Holmes\components\filters\Range include_lower() include_lower(\bool $value) Default: true
 * @method \Holmes\components\filters\Range include_upper() include_upper(\bool $value) Default: false
 * @method \Holmes\components\filters\Range _cache() _cache(\bool $value) Default: true

 */
class Range extends \Holmes\components\BaseComponent implements \Holmes\components\FilterInterface
{
    public function __construct($hashMap = null)
    {
        $this->params['include_lower'] = true;
        $this->params['include_upper'] = false;
        $this->params['_cache']        = true;
        $this->params['lte'] = null;
        $this->params['gte'] = null;
        $this->params['lt'] = null;
        $this->params['gt'] = null;
        parent::__construct($hashMap);
    }


    public function toArray()
    {
        $boundaries = array();
        if (isset($this->params['lte']))
            $boundaries['lte'] = $this->params['lte'];
        if (isset($this->params['gte']))
            $boundaries['gte'] = $this->params['gte'];
        if (isset($this->params['lt']) && !isset($this->params['lte']) )
            $boundaries['lt'] = $this->params['lt'];
        if (isset($this->params['gt']) && !isset($this->params['gte']) )
            $boundaries['gt'] = $this->params['gt'];

        $ret = array(
            'range' =>
            array(
                $this->params["field"] => $boundaries,
                '_cache'               => $this->params["_cache"],
            ),
        );

        return $ret;
    }

}
