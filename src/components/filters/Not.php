<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-19
 * Time: 08:26 PM
 * Auto-generated by "generate.filters.php"
 * @package Holmes\components\filters
 */
namespace Holmes\components\filters;

use Holmes\components;

/**
 * @method \Holmes\components\filters\Not _cache() _cache(\bool $value) Default: false
 */
class Not extends \Holmes\components\BaseComponent implements \Holmes\components\FilterInterface
{
    public function __construct($hashMap = null)
    {
        $this->params['_cache'] = false;

        parent::__construct($hashMap);
    }


    /**
     * @param  \Holmes\components\QueryInterface | \Holmes\components\FilterInterface $value
     *
     * @return Not
     */
    public function not($value)
    {
        if ($value instanceof \Holmes\components\QueryInterface) {
            $this->params['not'] = $value->toArray();
        } elseif ($value instanceof \Holmes\components\FilterInterface) {
            $this->params['not'] = array("filter" => $value->toArray());
        }

        return $this;
    }


    public function toArray()
    {
        $ret = array(
            'not'    => $this->params["not"],
            '_cache' => $this->params["_cache"],
        );

        return $ret;
    }

}
